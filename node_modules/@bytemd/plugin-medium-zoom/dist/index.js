"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
function mediumZoom(options) {
  let m;
  return {
    viewerEffect({ markdownBody }) {
      const imgs = [...markdownBody.querySelectorAll("img")].filter((e) => {
        var _a, _b;
        return ((_b = (_a = options == null ? void 0 : options.filter) == null ? void 0 : _a.call(options, e)) != null ? _b : true) && !e.closest("a");
      });
      if (imgs.length === 0)
        return;
      (async () => {
        if (!m) {
          m = await import("medium-zoom");
        }
        m.default(imgs, options);
      })();
    }
  };
}
module.exports = mediumZoom;
