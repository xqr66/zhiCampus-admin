import {
  __commonJS
} from "./chunk-4EOJPDL2.js";

// node_modules/is-promise/index.js
var require_is_promise = __commonJS({
  "node_modules/is-promise/index.js"(exports, module) {
    module.exports = isPromise;
    module.exports.default = isPromise;
    function isPromise(obj) {
      return !!obj && (typeof obj === "object" || typeof obj === "function") && typeof obj.then === "function";
    }
  }
});

// node_modules/lodash.isplainobject/index.js
var require_lodash = __commonJS({
  "node_modules/lodash.isplainobject/index.js"(exports, module) {
    var objectTag = "[object Object]";
    function isHostObject(value) {
      var result = false;
      if (value != null && typeof value.toString != "function") {
        try {
          result = !!(value + "");
        } catch (e) {
        }
      }
      return result;
    }
    function overArg(func, transform) {
      return function(arg) {
        return func(transform(arg));
      };
    }
    var funcProto = Function.prototype;
    var objectProto = Object.prototype;
    var funcToString = funcProto.toString;
    var hasOwnProperty = objectProto.hasOwnProperty;
    var objectCtorString = funcToString.call(Object);
    var objectToString = objectProto.toString;
    var getPrototype = overArg(Object.getPrototypeOf, Object);
    function isObjectLike(value) {
      return !!value && typeof value == "object";
    }
    function isPlainObject(value) {
      if (!isObjectLike(value) || objectToString.call(value) != objectTag || isHostObject(value)) {
        return false;
      }
      var proto = getPrototype(value);
      if (proto === null) {
        return true;
      }
      var Ctor = hasOwnProperty.call(proto, "constructor") && proto.constructor;
      return typeof Ctor == "function" && Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString;
    }
    module.exports = isPlainObject;
  }
});

// node_modules/lodash.isstring/index.js
var require_lodash2 = __commonJS({
  "node_modules/lodash.isstring/index.js"(exports, module) {
    var stringTag = "[object String]";
    var objectProto = Object.prototype;
    var objectToString = objectProto.toString;
    var isArray = Array.isArray;
    function isObjectLike(value) {
      return !!value && typeof value == "object";
    }
    function isString(value) {
      return typeof value == "string" || !isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag;
    }
    module.exports = isString;
  }
});

// node_modules/flux-standard-action/lib/index.js
var require_lib = __commonJS({
  "node_modules/flux-standard-action/lib/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.isFSA = isFSA;
    exports.isError = isError;
    var _lodash = _interopRequireDefault(require_lodash());
    var _lodash2 = _interopRequireDefault(require_lodash2());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function isFSA(action) {
      return (0, _lodash["default"])(action) && (0, _lodash2["default"])(action.type) && Object.keys(action).every(isValidKey);
    }
    function isError(action) {
      return isFSA(action) && action.error === true;
    }
    function isValidKey(key) {
      return ["type", "payload", "error", "meta"].indexOf(key) > -1;
    }
  }
});

// node_modules/redux-promise/lib/index.js
var require_lib2 = __commonJS({
  "node_modules/redux-promise/lib/index.js"(exports) {
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = promiseMiddleware;
    var _isPromise = _interopRequireDefault(require_is_promise());
    var _fluxStandardAction = require_lib();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _objectSpread(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i] != null ? arguments[i] : {};
        var ownKeys = Object.keys(source);
        if (typeof Object.getOwnPropertySymbols === "function") {
          ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
            return Object.getOwnPropertyDescriptor(source, sym).enumerable;
          }));
        }
        ownKeys.forEach(function(key) {
          _defineProperty(target, key, source[key]);
        });
      }
      return target;
    }
    function _defineProperty(obj, key, value) {
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function promiseMiddleware(_ref) {
      var dispatch = _ref.dispatch;
      return function(next) {
        return function(action) {
          if (!(0, _fluxStandardAction.isFSA)(action)) {
            return (0, _isPromise.default)(action) ? action.then(dispatch) : next(action);
          }
          return (0, _isPromise.default)(action.payload) ? action.payload.then(function(result) {
            return dispatch(_objectSpread({}, action, {
              payload: result
            }));
          }).catch(function(error) {
            dispatch(_objectSpread({}, action, {
              payload: error,
              error: true
            }));
            return Promise.reject(error);
          }) : next(action);
        };
      };
    }
  }
});
export default require_lib2();
//# sourceMappingURL=redux-promise.js.map
